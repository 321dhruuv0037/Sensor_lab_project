Arduino code:

int mq135_aqi_sensor = A1;
int flame_sensor_pin = 4;    
int flame_sensor_pin2 = 5;    
int yellow_led = 8;
int red_led = 10;                
int buzzer_pin = 6;
const int NOTE_C4 = 262;
const int NOTE_E4 = 330;
const int NOTE_G4 = 392;
const int NOTE_C5 = 523;
const int NOTE_B4 = 494;
const int NOTE_A4 = 440;
const int NOTE_F4 = 349;
const int NOTE_E5 = 659;
const int NOTE_D5 = 587;
const int NOTE_D4 = 294;
int flame_pin = HIGH;    
int flame_pin2 = HIGH;    
int aqi_ppm = 0;

void setup() {
  // Set direction of input-output pins
  pinMode (mq135_aqi_sensor, INPUT);
  pinMode (red_led, OUTPUT);
  pinMode(flame_sensor_pin, INPUT);     
  pinMode(flame_sensor_pin2, INPUT);     
  pinMode(yellow_led, OUTPUT);             
  pinMode(buzzer_pin, OUTPUT);             

  Serial.begin(9600);
  delay(1000);
}

void loop() {
  aqi_ppm = analogRead(mq135_aqi_sensor);
  flame_pin = digitalRead(flame_sensor_pin); 
  flame_pin2 = digitalRead(flame_sensor_pin2); 
  Serial.print("Air Quality: ");
  Serial.println(aqi_ppm);
  Serial.print("Fire: ");
  Serial.println(flame_pin);
  Serial.println(flame_pin2);
  
  if ((aqi_ppm >= 0) && (aqi_ppm <= 100))
  {
    Serial.println("AQI Good");
    digitalWrite(yellow_led, LOW);
  }
  else if ((aqi_ppm >= 101) && (aqi_ppm <= 200))
  {
    Serial.println("AQI Unhealthy");
    digitalWrite(yellow_led, LOW);
  }
  else if ((aqi_ppm >= 201) && (aqi_ppm <= 300))
  {
    Serial.println("AQI V. Unhealthy");
    digitalWrite(yellow_led, HIGH);
  }
  else if (aqi_ppm >= 301)
  {
    Serial.println("AQI Hazardous");
    digitalWrite(yellow_led, HIGH);
  }        
  if (flame_pin == LOW || flame_pin2 == LOW) {	
// checks whether there is flame, as flame present = sensor output low
    Serial.println("FLAME, FLAME, FLAME");
    digitalWrite(red_led, HIGH);                                     
    playMelody();	// play a melody on the buzzer
  }
  else
  {
    Serial.println("no flame");
    digitalWrite(red_led, LOW);                              
    noTone(buzzer_pin);	// stop playing any tone
  }
  
  delay (700);
}

void playMelody()
{
  tone(buzzer_pin, NOTE_C4, 200); 
  delay(200);
  tone(buzzer_pin, NOTE_D4, 200); 
  delay(200);
  tone(buzzer_pin, NOTE_E4, 400);
  delay(400);
  tone(buzzer_pin, NOTE_C4, 200);
  delay(200);
  tone(buzzer_pin, NOTE_D4, 200);
  delay(200);
  tone(buzzer_pin, NOTE_E4, 400);
  delay(400);
  tone(buzzer_pin, NOTE_D4, 200);
  delay(200);
  tone(buzzer_pin, NOTE_C4, 400);
  delay(400);
}

ESP8266 code:

#define BLYNK_PRINT Serial
#define mq135_aqi_sensor A0  
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>
char auth[] = "iX0_v-gwH63bL_rPyrC57D7lsOK_HLJQ";
char ssid[] = "ITLAB4";  // WiFi SSID 
char pass[] = "Dbit@2023";  // WiFi password 
BlynkTimer timer;  
int aqi_ppm = 0; 
void setup() {
  pinMode (mq135_aqi_sensor, INPUT);
  Blynk.begin(auth, ssid, pass);
  Serial.begin(19200); 
}
void loop() {
  Blynk.virtualWrite(V0, aqi_ppm);
  aqi_ppm = analogRead(mq135_aqi_sensor);  
  Serial.print("Air Quality: ");
  Serial.println(aqi_ppm);  
  if (aqi_ppm <= 80) {
    Serial.println("AQI Good");
  } else if (aqi_ppm <= 100) {
    Serial.println("AQI Moderate");
  } else if (aqi_ppm <= 200) {
    Serial.println("AQI Unhealthy");
  } else if (aqi_ppm <= 300) {
    Serial.println("AQI V. Unhealthy");
  } else {
    Serial.println("AQI Hazardous");
  }
  Blynk.run();
  delay(700);
}

